{"version":3,"sources":["js/FormControl.js","js/index.js"],"names":["FormControl","name","surname","phone","legal","email","comment","querySelectors","document","querySelector","query","addEventListener","value","className","length","match","nextElementSibling","errorContainer","ul","createElement","style","display","checked","firstChild","removeChild","classList","contains","li","innerHTML","appendChild","disabled","submitBtn","spinner","replaceChild","childNodes","_commit","setTimeout","data","JSON","stringify","console","log","arrowDown","anchor","mobileMenu","mobileMenuIcon","mobileMenuItems","querySelectorAll","formSubmit","scrollIntoView","behavior","event","toggle","forEach","item","Form","initEvents","preventDefault","handleSubmit"],"mappings":"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","file":"js.86a63c09.js","sourceRoot":"../src","sourcesContent":["//Form control as a class to handle all form data and form actions\r\nexport default class FormControl {\r\n    constructor() {\r\n        this.name;\r\n        this.surname;\r\n        this.phone;\r\n        this.legal;\r\n        this.email;\r\n        this.comment;\r\n        this.querySelectors = {\r\n            name : document.querySelector(\"#contact-form #name\"),\r\n            surname : document.querySelector(\"#contact-form #surname\"),\r\n            phone : document.querySelector(\"#contact-form #phone\"),\r\n            legal : document.querySelector(\"#contact-form #legal\"),\r\n            email : document.querySelector(\"#contact-form #email\")\r\n        }\r\n    }\r\n\r\n    //Init method that will create all events on the form and all validators for each input\r\n    initEvents() {\r\n        for (const query in this.querySelectors) {\r\n            this.querySelectors[query].addEventListener(\"blur\", () => {\r\n                if (!this.querySelectors[query].value) {\r\n                    this.querySelectors[query].className = \"error\";\r\n                }\r\n            });\r\n\r\n            this.querySelectors[query].addEventListener(\"keyup\", () => {\r\n                this.querySelectors[query].className = \"\";\r\n                if (!this.querySelectors[query].value.length) {\r\n                    this.querySelectors[query].className = \"error\";\r\n                } else {\r\n                    this.querySelectors[query].className = \"valid\";\r\n                }\r\n               \r\n                if (query === \"phone\") {\r\n                    const phoneRegex = /^\\d{9}$/;\r\n                    this.querySelectors[query].value.match(phoneRegex) ? this.querySelectors[query].className = \"valid\" : this.querySelectors[query].className = \"error\";\r\n                }\r\n\r\n                if (query === \"email\") {\r\n                    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    this.querySelectors[query].value.match(emailRegex) ? this.querySelectors[query].className = \"valid\" : this.querySelectors[query].className = \"error\";\r\n                }\r\n            });\r\n\r\n            this.querySelectors.legal.addEventListener(\"change\", () => {\r\n                this.querySelectors.legal.className = \"valid\";\r\n                this.querySelectors.legal.nextElementSibling.className = \"\";\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    //Method that will handle actions after submitting form, checking first for empty inputs and then displaying the errors to be fixed\r\n    //When all inputs are valid, save them in the class and commit them.\r\n    handleSubmit() {\r\n        const errorContainer = document.querySelector(\"#contact-form .errors\");\r\n        const ul = document.createElement(\"ul\");\r\n        errorContainer.style.display = \"none\";\r\n\r\n        for (const query in this.querySelectors) {\r\n            if (!this.querySelectors[query].value && query !== \"legal\") {\r\n                this.querySelectors[query].className = \"error\";\r\n            }           \r\n\r\n            if (query === \"legal\" && !this.querySelectors[query].checked) {\r\n                this.querySelectors[query].className = \"error\";\r\n                this.querySelectors[query].nextElementSibling.className = \"error-label\";\r\n            }\r\n        }\r\n\r\n        while (errorContainer.firstChild) {\r\n            errorContainer.removeChild(errorContainer.firstChild);\r\n        }\r\n\r\n        for (const query in this.querySelectors) {\r\n            if (this.querySelectors[query].classList.contains(\"error\")) {\r\n                const li = document.createElement(\"li\");\r\n                if (query === \"name\") {\r\n                    li.innerHTML = `Por favor introduzca su nombre.`;\r\n                }\r\n                if (query === \"surname\") {\r\n                    li.innerHTML = `Por favor introduzca su apellido.`;\r\n                }\r\n                if (query === \"phone\") {\r\n                    li.innerHTML = `Por favor introduzca un número de teléfono de 9 dígitos.`;\r\n                }\r\n                if (query === \"legal\") {\r\n                    li.innerHTML = `Por favor acepte el Aviso Legal.`;\r\n                }\r\n                if (query === \"email\") {\r\n                    li.innerHTML = `Por favor introduzca un correo electrónico válido.`;\r\n                }\r\n                ul.appendChild(li);\r\n                errorContainer.appendChild(ul);\r\n                errorContainer.style.display = \"block\";\r\n            } else {\r\n                if (query === \"name\") {\r\n                    this.name = this.querySelectors[query].value;\r\n                }\r\n                if (query === \"surname\") {\r\n                    this.surname = this.querySelectors[query].value;\r\n                }\r\n                if (query === \"phone\") {\r\n                    this.phone = this.querySelectors[query].value;\r\n                }\r\n                if (query === \"legal\") {\r\n                    this.legal = this.querySelectors[query].value;\r\n                }\r\n                if (query === \"email\") {\r\n                    this.email = this.querySelectors[query].value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.name && this.surname && this.phone && this.legal && this.email) {\r\n            this.comment = document.querySelector(\"#contact-form #comment\").value;\r\n\r\n            while (errorContainer.firstChild) {\r\n                errorContainer.removeChild(errorContainer.firstChild);\r\n            }\r\n\r\n            this.querySelectors.name.disabled = true;\r\n            this.querySelectors.surname.disabled = true;\r\n            this.querySelectors.phone.disabled = true;\r\n            this.querySelectors.legal.disabled = true;\r\n            this.querySelectors.email.disabled = true;\r\n            document.querySelector(\"#contact-form #comment\").disabled  = true;\r\n\r\n            const submitBtn = document.querySelector(\"#contact-form button\");\r\n            submitBtn.disabled = true;\r\n            const spinner = document.createElement(\"div\");\r\n            spinner.className = \"spinner\";\r\n            submitBtn.replaceChild(spinner,submitBtn.childNodes[0]);\r\n            this._commit();\r\n            //Time out to simulate sending data\r\n            setTimeout(() => submitBtn.innerHTML = `¡Gracias!`,2000)\r\n           \r\n        }\r\n    }\r\n\r\n    //The data from the class is saved as json and would be ready to be sent.\r\n    _commit() {\r\n        const data = JSON.stringify({\"name\": this.name, \"surname\": this.surname, \"phone\": this.phone, \"legal\": this.legal, \"email\": this.email, \"comment\": this.comment });\r\n        console.log(data);\r\n    }\r\n}","import FormControl from './FormControl';\r\n\r\n//Initial function to set up DOM event listeners and form control\r\n(() => {\r\n    const arrowDown = document.querySelector(\".circle\");\r\n    const anchor = document.querySelector(\"#scroll\");\r\n    const mobileMenu = document.querySelector(\".main-nav\");\r\n    const mobileMenuIcon = document.querySelector(\".mobile-menu\");\r\n    const mobileMenuItems = document.querySelectorAll(\".main-nav a\");\r\n    const formSubmit = document.querySelector(\"#contact-form\");\r\n\r\n    //Arrow down scroll effect\r\n    arrowDown.addEventListener(\"click\", () => {\r\n        anchor.scrollIntoView({behavior: \"smooth\"});\r\n    });\r\n\r\n    //Mobile menu events to show/hide\r\n    mobileMenu.addEventListener(\"click\", event => {\r\n        mobileMenuIcon.classList.toggle(\"active\");\r\n        mobileMenuItems.forEach(item => item.classList.toggle(\"active\"));\r\n        mobileMenu.classList.toggle(\"active\");\r\n    })\r\n\r\n    //Setting up form control to create form events and handling submit\r\n    const Form = new FormControl();\r\n    Form.initEvents();\r\n\r\n    formSubmit.addEventListener(\"submit\", event => {\r\n        event.preventDefault();\r\n        Form.handleSubmit();\r\n    })\r\n})();"]}